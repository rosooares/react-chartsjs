{"ast":null,"code":"var _jsxFileName = \"/home/roberta/\\xC1rea de trabalho/estudos_react/react-chartsjs/react-chartsjs/src/components/BarChart.js\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjsx'; // import '../css/BarChart.css';\n\nconst initialState = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n  datasets: [{\n    label: 'My First dataset',\n    backgroundColor: 'rgba(255,99,132,0.2)',\n    borderColor: 'rgba(255,99,132,1)',\n    borderWidth: 1,\n    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n    hoverBorderColor: 'rgba(255,99,132,1)',\n    data: [65, 59, 80, 81, 56, 55, 40]\n  }]\n};\nconst Graph = React.createClass({\n  displayName: 'Graph',\n\n  componentWillMount() {\n    this.setState(initialState);\n  },\n\n  componentDidMount() {\n    var _this = this;\n\n    setInterval(function () {\n      var oldDataSet = _this.state.datasets[0];\n      var newData = [];\n\n      for (var x = 0; x < _this.state.labels.length; x++) {\n        newData.push(Math.floor(Math.random() * 100));\n      }\n\n      var newDataSet = { ...oldDataSet\n      };\n      newDataSet.data = newData;\n      newDataSet.backgroundColor = color();\n      newDataSet.borderColor = color();\n      newDataSet.hoverBackgroundColor = color();\n      newDataSet.hoverBorderColor = color();\n      var newState = { ...initialState,\n        datasets: [newDataSet]\n      };\n\n      _this.setState(newState);\n    }, 5000);\n  },\n\n  render() {\n    return /*#__PURE__*/React.createElement(Bar, {\n      data: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }\n    });\n  }\n\n});\n\nclass BarChart extends Component {\n  render() {\n    // const chartOptions = {\n    //   responsive: false\n    // }\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Graph, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default BarChart;","map":{"version":3,"sources":["/home/roberta/Área de trabalho/estudos_react/react-chartsjs/react-chartsjs/src/components/BarChart.js"],"names":["React","Component","Bar","initialState","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","Graph","createClass","displayName","componentWillMount","setState","componentDidMount","_this","setInterval","oldDataSet","state","newData","x","length","push","Math","floor","random","newDataSet","color","newState","render","BarChart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,gBAApB,C,CAEA;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADS;AAEjBC,EAAAA,QAAQ,EAAE,CACR;AACIC,IAAAA,KAAK,EAAE,kBADX;AAEIC,IAAAA,eAAe,EAAE,sBAFrB;AAGIC,IAAAA,WAAW,EAAE,oBAHjB;AAIIC,IAAAA,WAAW,EAAE,CAJjB;AAKIC,IAAAA,oBAAoB,EAAE,sBAL1B;AAMIC,IAAAA,gBAAgB,EAAE,oBANtB;AAOIC,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;AAPV,GADQ;AAFO,CAArB;AAeE,MAAMC,KAAK,GAAGb,KAAK,CAACc,WAAN,CAAkB;AACjCC,EAAAA,WAAW,EAAE,OADoB;;AAEjCC,EAAAA,kBAAkB,GAAE;AACnB,SAAKC,QAAL,CAAcd,YAAd;AACA,GAJgC;;AAKjCe,EAAAA,iBAAiB,GAAE;AAElB,QAAIC,KAAK,GAAG,IAAZ;;AAEAC,IAAAA,WAAW,CAAC,YAAU;AACrB,UAAIC,UAAU,GAAGF,KAAK,CAACG,KAAN,CAAYjB,QAAZ,CAAqB,CAArB,CAAjB;AACA,UAAIkB,OAAO,GAAG,EAAd;;AAEA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEL,KAAK,CAACG,KAAN,CAAYlB,MAAZ,CAAmBqB,MAAnC,EAA2CD,CAAC,EAA5C,EAA+C;AAC9CD,QAAAA,OAAO,CAACG,IAAR,CAAaC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAb;AACA;;AAED,UAAIC,UAAU,GAAG,EAChB,GAAGT;AADa,OAAjB;AAIAS,MAAAA,UAAU,CAAClB,IAAX,GAAkBW,OAAlB;AACAO,MAAAA,UAAU,CAACvB,eAAX,GAA6BwB,KAAK,EAAlC;AACAD,MAAAA,UAAU,CAACtB,WAAX,GAAyBuB,KAAK,EAA9B;AACAD,MAAAA,UAAU,CAACpB,oBAAX,GAAkCqB,KAAK,EAAvC;AACAD,MAAAA,UAAU,CAACnB,gBAAX,GAA8BoB,KAAK,EAAnC;AAEA,UAAIC,QAAQ,GAAG,EACd,GAAG7B,YADW;AAEdE,QAAAA,QAAQ,EAAE,CAACyB,UAAD;AAFI,OAAf;;AAKAX,MAAAA,KAAK,CAACF,QAAN,CAAee,QAAf;AACA,KAxBU,EAwBR,IAxBQ,CAAX;AAyBA,GAlCgC;;AAmCjCC,EAAAA,MAAM,GAAG;AACR,wBACC,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,KAAKX,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGA;;AAvCgC,CAAlB,CAAd;;AA6CF,MAAMY,QAAN,SAAuBjC,SAAvB,CAAiC;AAE3BgC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMM,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANN,CADF;AAUD;;AAjB0B;;AAoBjC,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjsx';\n\n// import '../css/BarChart.css';\n\nconst initialState = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n          label: 'My First dataset',\n          backgroundColor: 'rgba(255,99,132,0.2)',\n          borderColor: 'rgba(255,99,132,1)',\n          borderWidth: 1,\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n          hoverBorderColor: 'rgba(255,99,132,1)',\n          data: [65, 59, 80, 81, 56, 55, 40]\n      }\n    ]\n  };\n\n  const Graph = React.createClass({\n\tdisplayName: 'Graph',\n\tcomponentWillMount(){\n\t\tthis.setState(initialState);\n\t},\n\tcomponentDidMount(){\n\n\t\tvar _this = this;\n\n\t\tsetInterval(function(){\n\t\t\tvar oldDataSet = _this.state.datasets[0];\n\t\t\tvar newData = [];\n\n\t\t\tfor(var x=0; x< _this.state.labels.length; x++){\n\t\t\t\tnewData.push(Math.floor(Math.random() * 100));\n\t\t\t}\n\n\t\t\tvar newDataSet = {\n\t\t\t\t...oldDataSet\n\t\t\t};\n\n\t\t\tnewDataSet.data = newData;\n\t\t\tnewDataSet.backgroundColor = color();\n\t\t\tnewDataSet.borderColor = color();\n\t\t\tnewDataSet.hoverBackgroundColor = color();\n\t\t\tnewDataSet.hoverBorderColor = color();\n\n\t\t\tvar newState = {\n\t\t\t\t...initialState,\n\t\t\t\tdatasets: [newDataSet]\n\t\t\t};\n\n\t\t\t_this.setState(newState);\n\t\t}, 5000);\n\t},\n\trender() {\n\t\treturn (\n\t\t\t<Bar data={this.state} />\n\t\t);\n\t}\n});\n\n\n\n\nclass BarChart extends Component {\n    \n      render() {\n        // const chartOptions = {\n        //   responsive: false\n        // }\n    \n        return (\n          <div>\n            {/* <Bar data={this.state.barChartData} \n                 options={chartOptions} \n                //  width={800} \n                //  height={400} \n                /> */}\n                <Graph />\n          </div>\n        )\n      }\n}\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}